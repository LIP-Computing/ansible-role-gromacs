---
# tasks file for ansible-role-gromacs
- name: Install necessary packages
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - build-essential
    - cmake
    - gcc
    - g++
    - git
    - libatlas-dev
    - libboost-all-dev
    - libfreetype6-dev
    - liblapack-dev
    - module-init-tools
    - pkg-config
    - perl
    - perl-doc
    - python
    - python-dev
    - python-pip
    - sudo
    - wget

- name: Get CUDA
  get_url: url={{ cuda_url }} dest=/tmp mode=700

- name: Install CUDA
  command: /tmp/{{ cuda_run }} -noprompt

- name: Untar Gromacs
  unarchive: src={{ gromacs_url }} dest=/tmp  owner=root group=root copy=no creates=/tmp/{{ gromacs_version }}

- name: mkdir Gromacs build dir
  file: path=/tmp/{{ gromacs_version }}/build state=directory

- name: run cmake on Gromacs
  command: cmake .. -DGMX_BUILD_OWN_FFTW=ON -DGMX_GPU=on chdir=/tmp/{{ gromacs_version }}/build
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/cuda-8.0/bin"
    CXX: "/usr/bin/g++"
    LD_LIBRARY_PATH: "/usr/local/cuda-8.0/lib64"

- name: run make on Gromacs
  command: make chdir=/tmp/{{ gromacs_version }}/build
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/cuda-8.0/bin"
    CXX: "/usr/bin/g++"
    LD_LIBRARY_PATH: "/usr/local/cuda-8.0/lib64"

- name: run make check on Gromacs
  command: make check chdir=/tmp/{{ gromacs_version }}/build
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/cuda-8.0/bin"
    CXX: "/usr/bin/g++"
    LD_LIBRARY_PATH: "/usr/local/cuda-8.0/lib64"

- name: run make install on Gromacs
  command: make install chdir=/tmp/{{ gromacs_version }}/build
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/cuda-8.0/bin"
    CXX: "/usr/bin/g++"
    LD_LIBRARY_PATH: "/usr/local/cuda-8.0/lib64"

#- name: Remove tmp files (cuda and gromacs)
